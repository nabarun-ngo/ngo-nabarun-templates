name: Create Tag & Release 
on:
  workflow_call:
     inputs:
      source_branch:
        required: true
        type: string
      pre_release_branches:
         required: false
         type: string
         default: 'staging,stage'
      release_branches:
         required: false
         type: string
         default: 'master,main'
     outputs:
      tag_name:
        value: ${{ jobs.create_tag.outputs.tag_name }}
      stable_tag:
        value: ${{ jobs.promote_stable.outputs.stable_tag }}
        
permissions:
      contents: write    
      
jobs:
  create_tag:
    name: Create Tag
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.tag_version.outputs.new_tag }}
      bump_type: ${{ steps.tag_version.outputs.release_type }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
         ref: ${{ inputs.source_branch }}

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_release_branches: ${{ inputs.pre_release_branches }}
          release_branches: ${{ inputs.release_branches }}
          append_to_pre_release_tag: beta

  promote_stable:
    name: Promote Pre-release to Stable
    runs-on: ubuntu-latest
    needs: create_tag
    if: contains(inputs.release_branches,inputs.source_branch)
    outputs:
      stable_tag: ${{ steps.sync_latest.outputs.stable_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Fetch tags
        run: git fetch --tags --force

      - name: Sync with Latest Pre-release
        id: sync_latest
        run: |
          # Extract the latest pre-release tag (beta)
          latest_beta=$(git tag --list "v*.*.*-beta.*" --sort=-version:refname | head -n 1)
          
          # Extract base version (e.g., v1.0.0 from v1.0.0-beta.5)
          stable_version=$(echo "$latest_beta" | sed 's/-beta.*//')
          
          # Create stable tag if missing
          if ! git rev-parse "$stable_version" >/dev/null 2>&1; then
            echo "Creating stable release: $stable_version"
            git tag "$stable_version"
            git push origin "$stable_version"
            echo "stable_tag=$stable_version" >> $GITHUB_OUTPUT
          else
            echo "Stable release already exists: $stable_version"
            echo "stable_tag=$stable_version" >> $GITHUB_OUTPUT
          fi

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [promote_stable]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.promote_stable.outputs.stable_tag }}  
          name: Release ${{ needs.promote_stable.outputs.stable_tag }}
          body: |
            **Changes:**
            ${{ needs.create_tag.outputs.changelog }}
          draft: false
          prerelease: false
  
