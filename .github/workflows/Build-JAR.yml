name: Build and Create JAR
on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string
      target_folder:
        required: false
        type: string
        default: 'target'
      files_to_copy:
        required: false
        type: string
        default: ''
    outputs:
      jar_path:
        description: "Path of the JAR file"
        value: ${{ jobs.build-jar.outputs.jar_path }}
   
jobs:
  build-jar:
    runs-on: ubuntu-latest
    outputs:
      jar_path: ${{ steps.get-jar-path.outputs.jar_path }}
    steps:
      - name: Checkout repository | ${{ inputs.branch_name }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_name }}

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17' 
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-   
        
      - name: Build with Maven
        run: |
          mvn clean package
          
      - name: Get JAR file path
        id: get-jar-path
        run: |
          JAR_PATH=$(find ${{ inputs.target_folder }} -name "*.jar" | grep -v "sources.jar" | grep -v "javadoc.jar")
          echo "jar_path=${JAR_PATH}" >> $GITHUB_OUTPUT
          echo "JAR file path: ${JAR_PATH}"
      
      - name: Copy Files to ${{ inputs.target_folder }} folder
        if: ${{ inputs.files_to_copy != '' }}
        run: |
          # Convert the comma-separated list into an array
          IFS=',' read -r -a FILES <<< "${{ inputs.files_to_copy }}"
          TARGET_DIR="${{ inputs.target_folder }}"

          # Create the target directory if it doesn't exist
          mkdir -p "$TARGET_DIR"

          # Iterate over the files array and copy them
          for FILE in "${FILES[@]}"; do
            if [ -f "$FILE" ]; then
              echo "Copying $FILE to $TARGET_DIR"
              cp "$FILE" "$TARGET_DIR"
            else
              echo "File $FILE does not exist. Skipping..."
            fi
          done

     
