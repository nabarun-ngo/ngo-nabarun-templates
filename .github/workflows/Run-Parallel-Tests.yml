name: Run Automated Test [Parallel]
on:
  workflow_call:
    inputs:
      test_env:
        required: true
        type: string
      test_doppler_project_name:
        required: true
        type: string
      test_cucumber_tags:
        required: true
        type: string
      test_type:
        required: true
        type: string
      max_tests_per_matrix:
        required: false
        type: number
        default: 5
      max_rerun_attempt:
        required: false
        type: number
        default: 1
      app_ui_version:
        description: 'UI application version being tested'
        required: true
        type: string
      app_server_version:
        description: 'Server application version being tested'
        required: true
        type: string
      java_version:
        required: false
        type: string
        default: '22'
      target_folder:
        required: false
        type: string
        default: 'target'
      repository_name:
        description: 'Test repository name (org/repo-name)'
        required: true
        type: string
      branch_name:
        required: false
        type: string
        default: 'stage'
      test_cycle:
        required: false
        type: string
      test_cycle_folder:
        description: 'QMetry folder ID for test cycles'
        required: true
        type: string
      test_case_folder:
        description: 'QMetry folder ID for test cases'
        required: true
        type: string
      qmetry_project_id:
        description: 'QMetry project ID'
        required: true
        type: string
      jira_url:
        description: 'JIRA/Atlassian base URL'
        required: true
        type: string
      upload_result:
        required: false
        type: boolean
        default: true
        
    secrets:
      test_doppler_service_token:
        required: true
      qmetry_api_key:
        required: true
      qmetry_open_api_key:
        required: true
    outputs:
      # Discovery outputs
      discovery_status:
        description: 'Status of test discovery process'
        value: ${{ jobs.discover-scenarios.result }}
      scenario_count:
        description: 'Total number of scenarios discovered'
        value: ${{ jobs.discover-scenarios.outputs.scenario_count }}
      # Execution outputs
      test_execution_status:
        description: 'Status of test execution process'
        value: ${{ jobs.run_test.result }}
      # Upload outputs
      upload_status:
        description: 'Status of test results upload process'
        value: ${{ jobs.upload_test_result.result }}
      test_execution_url:
        description: "QMetry test execution URL"
        value: ${{ jobs.upload_test_result.outputs.execution_url }}
      test_cycle:
        description: "QMetry test cycle key"
        value: ${{ jobs.upload_test_result.outputs.test_cycle }}
      test_results_uploaded:
        description: "Whether test results were uploaded to QMetry"
        value: ${{ inputs.upload_result && jobs.upload_test_result.result == 'success' }}
      # Summary outputs
      overall_status:
        description: 'Overall workflow execution status'
        value: ${{ (jobs.discover-scenarios.result == 'success' && (jobs.run_test.result == 'success' || jobs.run_test.result == 'failure') && (inputs.upload_result == false || jobs.upload_test_result.result == 'success')) && 'completed' || 'failed' }}
      test_summary:
        description: 'Test execution summary information'
        value: 'Environment: ${{ inputs.test_env }} | Type: ${{ inputs.test_type }} | Tags: ${{ inputs.test_cucumber_tags }} | Scenarios: ${{ jobs.discover-scenarios.outputs.scenario_count }} | UI Version: ${{ inputs.app_ui_version }} | Server Version: ${{ inputs.app_server_version }}'
        
jobs:
  discover-scenarios:
    name: 'Discover Test'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      matrix: ${{ steps.discover.outputs.matrix }}
      scenario_count: ${{ steps.discover.outputs.scenario_count }}
    steps:
      - name: Setup test environment
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/test-setup@main
        with:
          java_version: ${{ inputs.java_version }}
          test_repository: ${{ inputs.repository_name }}
          test_branch: ${{ inputs.branch_name }}

      - name: Discover test scenarios
        id: discover
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/cucumber-discover-scenarios@main
        with:
          cucumber_tags: ${{ inputs.test_cucumber_tags }}
          max_scenarios_per_job: ${{ inputs.max_tests_per_matrix }}

  run_test:
    needs: discover-scenarios
    name: 'Run Test'
    runs-on: windows-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover-scenarios.outputs.matrix) }}
    steps:
    - name: Setup test environment
      uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/test-setup@main
      with:
        java_version: ${{ inputs.java_version }}
        test_repository: ${{ inputs.repository_name }}
        test_branch: ${{ inputs.branch_name }}

    - name: Process test scenarios
      id: test_params
      shell: bash
      run: |
        SCENARIOS=$(echo '${{ toJson(matrix.scenarios) }}' | jq -r '.[]' | paste -sd, -)
        echo "Run Id : ${{ github.run_id }}"
        echo "Test tags: ${{ inputs.test_cucumber_tags }}"
        echo "Scenarios: $SCENARIOS"
        echo "scenarios=$SCENARIOS" >> $GITHUB_OUTPUT

    - name: Run Cucumber Tests
      id: run_tests
      uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/cucumber-run-tests@main
      with:
        scenarios: ${{ steps.test_params.outputs.scenarios }}
        job_index: ${{ strategy.job-index }}
        test_environment: ${{ inputs.test_env }}
        doppler_project_name: ${{ inputs.test_doppler_project_name }}
        doppler_service_token: ${{ secrets.test_doppler_service_token }}
        max_rerun_attempts: ${{ inputs.max_rerun_attempt }}
      continue-on-error: true

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: cucumber-json-${{ strategy.job-index }}
        path: test/target/cucumber-${{ strategy.job-index }}.json

    - name: Show Tests Result
      shell: bash
      run: |
        TEST_STATUS="${{ steps.run_tests.outputs.test_status }}"
        echo "Test Status: $TEST_STATUS"
        echo "Exit Code: ${{ steps.run_tests.outputs.exit_code }}"
        if [ "$TEST_STATUS" = "FAILED" ]; then
          echo "❌ Test execution failed"
          exit 1
        else
          echo "✅ Test execution completed successfully"
        fi
          
  upload_test_result:
    name: 'Upload Test Results'
    if: ${{ inputs.upload_result == true &&  needs.run_test.result != 'cancelled' && always() }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: run_test
    outputs:
      execution_url: ${{ steps.result_linker.outputs.execution_url }}
      test_cycle: ${{ steps.result_linker.outputs.test_cycle }}
    steps:
      - name: Consolidate Test Results
        id: consolidate
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/test-results-consolidation@main
        
      - name: Manage Test Cycle Cache  
        id: cache_manager
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/test-cycle-cache-manager@main
        with:
          workflow_name: ${{ github.workflow }}
          run_id: ${{ github.run_id }}
          run_attempt: ${{ github.run_attempt }}
          test_type: ${{ inputs.test_type }}
          
      - name: Upload to QMetry
        id: qmetry_upload
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/qmetry-upload-manager@main
        with:
          qmetry_api_key: ${{ secrets.qmetry_api_key }}
          test_environment: ${{ inputs.test_env }}
          test_cycle_summary: ${{ steps.cache_manager.outputs.test_cycle_summary }}
          test_cycle_folder: ${{ inputs.test_cycle_folder }}
          test_case_folder: ${{ inputs.test_case_folder }}
          app_server_version: ${{ inputs.app_server_version }}
          app_ui_version: ${{ inputs.app_ui_version }}
          test_type: ${{ inputs.test_type }}
          run_id: ${{ github.run_id }}
          run_attempt: ${{ github.run_attempt }}
          results_file_path: ${{ steps.consolidate.outputs.merged_file_path }}
          cached_test_cycle: ${{ steps.cache_manager.outputs.cached_test_cycle }}
          
      - name: Generate Result Links
        id: result_linker  
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/qmetry-result-linker@main
        with:
          qmetry_open_api_key: ${{ secrets.qmetry_open_api_key }}
          qmetry_project_id: ${{ inputs.qmetry_project_id }}
          jira_url: ${{ inputs.jira_url }}
          test_cycle_summary: ${{ steps.cache_manager.outputs.test_cycle_summary }}
          workflow_name: ${{ github.workflow }}
          run_id: ${{ github.run_id }}
      
      
