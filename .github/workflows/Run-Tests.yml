name: Run Automated Test
on:
  workflow_call:
    inputs:
      test_env:
        required: true
        type: string
      test_doppler_project_name:
        required: true
        type: string
      test_cucumber_tags:
        required: true
        type: string
      test_type:
        required: true
        type: string
      app_ui_version:
        required: false
        type: string
        default: 'latest'
      app_server_version:
        required: false
        type: string
        default: 'latest'
      java_version:
        required: false
        type: string
        default: '22'
      target_folder:
        required: false
        type: string
        default: 'target'
      repository_name:
        required: false
        type: string
        default: 'nabarun-ngo/ngo-nabarun-test'
      branch_name:
        required: false
        type: string
        default: 'master'
      test_cycle:
        required: false
        type: string
      test_cycle_folder:
        required: false
        type: string
        default: '1388976'
      test_case_folder:
        required: false
        type: string
        default: '1449797'
      qmetry_project_id:
        required: false
        type: string
        default: '10004'
      jira_url:
        required: false
        type: string
        default: 'https://ngonabarun.atlassian.net'
      upload_result:
        required: false
        type: boolean
        default: true
        
    secrets:
      test_doppler_service_token:
        required: true
      qmetry_api_key:
        required: true
      qmetry_open_api_key:
        required: true
    outputs:
      test_execution_url:
        description: "QMetry test execution URL"
        value: ${{ jobs.upload_test_result.outputs.execution_url }}
      test_cycle:
        description: "QMetry test cycle key"
        value: ${{ jobs.upload_test_result.outputs.test_cycle }}
      test_results_uploaded:
        description: "Whether test results were uploaded to QMetry"
        value: ${{ inputs.upload_result && jobs.upload_test_result.result == 'success' }}
        
jobs:
  run_test:
    name: 'Run Test'
    runs-on: ubuntu-latest
    steps:
      - name: Setup test environment
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/test-setup@main
        with:
          java_version: ${{ inputs.java_version }}
          test_repository: ${{ inputs.repository_name }}
          test_branch: ${{ inputs.branch_name }}

      - name: Run Cucumber Tests
        id: run_tests
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/cucumber-run-tests@main
        with:
          scenarios: ${{ inputs.test_cucumber_tags }}
          job_index: 0
          test_environment: ${{ inputs.test_env }}
          doppler_project_name: ${{ inputs.test_doppler_project_name }}
          doppler_service_token: ${{ secrets.test_doppler_service_token }}
          max_rerun_attempts: 1
        continue-on-error: true

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test/target/cucumber-0.json
      
      - name: Show Tests Result
        shell: bash
        run: |
          TEST_STATUS="${{ steps.run_tests.outputs.test_status }}"
          echo "Test Status: $TEST_STATUS"
          echo "Exit Code: ${{ steps.run_tests.outputs.exit_code }}"
          if [ "$TEST_STATUS" = "FAILED" ]; then
            echo "❌ Test execution failed"
            exit 1
          else
            echo "✅ Test execution completed successfully"
          fi
          
  upload_test_result:
    name: 'Upload Test Results'
    if: ${{ inputs.upload_result == true &&  needs.run_test.result != 'cancelled' && always() }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: run_test
    outputs:
      execution_url: ${{ steps.result_linker.outputs.execution_url }}
      test_cycle: ${{ steps.result_linker.outputs.test_cycle }}
    steps:
      - name: Consolidate Test Results
        id: consolidate
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/test-results-consolidation@main
        with:
          templates_repository: nabarun-ngo/ngo-nabarun-templates
          artifact_download_path: all-results
          merged_output_path: merged
          merged_artifact_name: merged-cucumber-json

      - name: Manage Test Cycle Cache
        id: cache_manager
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/test-cycle-cache-manager@main
        with:
          workflow_name: ${{ github.workflow }}
          run_id: ${{ github.run_id }}
          run_attempt: ${{ github.run_attempt }}
          test_type: ${{ inputs.test_type }}

      - name: Upload to QMetry
        id: qmetry_upload
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/qmetry-upload-manager@main
        with:
          qmetry_api_key: ${{ secrets.qmetry_api_key }}
          test_environment: ${{ inputs.test_env }}
          test_cycle_summary: ${{ steps.cache_manager.outputs.test_cycle_summary }}
          test_cycle_folder: ${{ inputs.test_cycle_folder }}
          test_case_folder: ${{ inputs.test_case_folder }}
          app_server_version: ${{ inputs.app_server_version }}
          app_ui_version: ${{ inputs.app_ui_version }}
          test_type: ${{ inputs.test_type }}
          run_id: ${{ github.run_id }}
          run_attempt: ${{ github.run_attempt }}
          results_file_path: ${{ steps.consolidate.outputs.merged_file_path }}
          cached_test_cycle: ${{ steps.cache_manager.outputs.cached_test_cycle }}

      - name: Generate Result Links
        id: result_linker
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/qmetry-result-linker@main
        with:
          qmetry_open_api_key: ${{ secrets.qmetry_open_api_key }}
          qmetry_project_id: ${{ inputs.qmetry_project_id }}
          jira_url: ${{ inputs.jira_url }}
          test_cycle_summary: ${{ steps.cache_manager.outputs.test_cycle_summary }}
          workflow_name: ${{ github.workflow }}
          run_id: ${{ github.run_id }}
          cache_file_path: variables.env
      
      
