name: Run Automated Test
on:
  workflow_call:
    inputs:
      test_env:
        required: true
        type: string
      test_doppler_project_name:
        required: true
        type: string
      test_cucumber_tags:
        required: true
        type: string
      java_version:
        required: false
        type: string
        default: '17'
      target_folder:
        required: false
        type: string
        default: 'target'
      repository_name:
        required: false
        type: string
        default: 'nabarun-ngo/ngo-nabarun-test'
      branch_name:
        required: false
        type: string
        default: 'master'
      test_cycle:
        required: false
        type: string
      upload_result:
        required: false
        type: boolean
        default: true
        
    secrets:
      test_doppler_service_token:
        required: true
      qmetry_api_key:
        required: true
        
jobs:
  run_test:
    name: 'Run Test'
    runs-on: ubuntu-latest
    steps:   
      - name: Checkout repository | Branch ${{ inputs.branch_name }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository_name }}
          ref: ${{ inputs.branch_name }}

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.java_version }} 
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-   

      - name: Run Cucumber Tests
        run: |
          echo "Running tests with tags: ${{ inputs.test_cucumber_tags }}"
          mvn clean test -Dcucumber.filter.tags="${{ inputs.test_cucumber_tags }}" -DENVIRONMENT=${{ inputs.test_env }} -DCONFIG_SOURCE=doppler -DDOPPLER_PROJECT_NAME=${{ inputs.test_doppler_project_name }} -DDOPPLER_SERVICE_TOKEN=${{ secrets.test_doppler_service_token }} -Dheadless=Y || TEST_FAILED=true

          if [ "$TEST_FAILED" = "true" ]; then
            echo "TEST_STATUS=FAILED" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=SUCCESS" >> $GITHUB_ENV
          fi
        continue-on-error: true
        
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/cucumber.json
      
      - name: Tests Result
        run: |
          echo "Test Status: $TEST_STATUS"
          if [ "$TEST_STATUS" = "FAILED" ]; then
            exit 1
          fi
          
  upload_test_result:
    name: 'Upload Test Results'
    if: ${{ inputs.upload_result == true && always() }}
    runs-on: ubuntu-latest
    needs: run_test
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: test-results
          
      - name: Generate Upload URL
        id: generate_url
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://qtmcloud.qmetry.com/rest/api/automation/importresult'
          method: POST
          customHeaders: '{"Content-Type": "application/json","apiKey":"${{ secrets.qmetry_api_key }}"}'
          data: '{ "format": "cucumber", "testCycleToReuse": "${{ inputs.test_cycle }}", "attachFile": true, "isZip": false, "environment": "${{ inputs.test_env }}", "matchTestSteps": true }'

      - name: Upload Test result
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ fromJson(steps.generate_url.outputs.response).url }}
          method: PUT
          headers: '{"Content-Type": "multipart/form-data"}'
          file: ./cucumber.json
