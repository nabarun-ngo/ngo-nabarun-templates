name: Build and Deploy to Firebase Hosting
on:
  workflow_call:
    inputs:
      tag_name:
        required: true
        type: string
      repo_name:
        required: true
        type: string
      repo_owner_name:
        required: true
        type: string
      environment_name:
        required: true
        type: string
      environment_url:
        required: false
        type: string
      firebase_project_id:
        required: true
        type: string
      npm_run_command:
        required: true
        type: string
    secrets:
      firebase_service_account:
        required: true
      repo_token:
        required: true
     
jobs:  
   build-and-deploy:
    name: 'Build Artifacts and Deploy to Firebase'
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.environment_name }}
    steps:
      - name: Checkout and Setup Environment
        uses: ./.github/actions/checkout-and-setup
        with:
          tag_name: ${{ inputs.tag_name }}
          repo_name: ${{ inputs.repo_name }}
          repo_owner_name: ${{ inputs.repo_owner_name }}
          setup_node: 'true'
          node_version: '20'

      - name: Create GitHub Deployment
        uses: ./.github/actions/github-deployment
        id: deployment
        with:
          token: ${{ secrets.repo_token }}
          environment_name: ${{ inputs.environment_name }}
          environment_url: ${{ inputs.environment_url }}
          repo_name: ${{ inputs.repo_name }}
          repo_owner_name: ${{ inputs.repo_owner_name }}
          tag_name: ${{ inputs.tag_name }}
          
      - name: Update package.json version
        uses: restackio/update-json-file-action@2.1
        with:
          file: package.json
          fields: '{"version": "${{ inputs.tag_name }}"}'
          
      - name: Build NPM
        run: ${{ inputs.npm_run_command }}

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: '${{ secrets.firebase_service_account }}'
          channelId: live
          projectId: ${{ inputs.firebase_project_id }}

      - name: Update deployment status (success)
        if: success()
        uses: ./.github/actions/deployment-status
        with:
          state: 'success'
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          token: ${{ secrets.repo_token }}
          environment_url: ${{ inputs.environment_url }}
          repo_name: ${{ inputs.repo_name }}
          repo_owner_name: ${{ inputs.repo_owner_name }}

      - name: Update deployment status (failure)
        if: failure()
        uses: ./.github/actions/deployment-status
        with:
          state: 'failure'
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          token: ${{ secrets.repo_token }}
          environment_url: ${{ inputs.environment_url }}
          repo_name: ${{ inputs.repo_name }}
          repo_owner_name: ${{ inputs.repo_owner_name }}
 
  
  
