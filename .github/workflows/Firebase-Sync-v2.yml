name: Firebase Sync Data
on:
  workflow_call:
    inputs:
      branch_name:
        required: false
        type: string
        default: 'main'
      firebase_source_project:
        required: true
        type: string
      firebase_target_project:
        required: true
        type: string
    secrets:
      firebase_service_account_source:
        required: true
      firebase_service_account_target:
        required: true
        
jobs:
  sync_remote_config:
    name: 'Sync Data between Firebase Remote Config'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'

      - name: Install jq (JSON parser)
        run: sudo apt-get install jq -y

      - name: Authenticate with Firebase (Source)
        run: |
          gcloud auth activate-service-account --key-file <(echo '${{ secrets.firebase_service_account_source }}')
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Export Remote Config from Source
        run: |
          curl -X GET \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Accept: application/json" \
            "https://firebaseremoteconfig.googleapis.com/v1/projects/${{ inputs.firebase_source_project }}/remoteConfig" \
            -o remote-config.json

      - name: Upload Remote Config as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: remote-config
          path: remote-config.json
          retention-days: 7  # Keep the file for 7 days

      - name: Authenticate with Firebase (Target)
        run: |
          gcloud auth activate-service-account --key-file <(echo '${{ secrets.firebase_service_account_target }}')
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Import Remote Config to Target
        run: |
          ETAG=$(curl -X GET \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Accept: application/json" \
            "https://firebaseremoteconfig.googleapis.com/v1/projects/${{ inputs.firebase_target_project }}/remoteConfig" \
            | jq -r '.etag')

          curl -X PUT \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json; UTF-8" \
            -H "If-Match: $ETAG" \
            -d @remote-config.json \
            "https://firebaseremoteconfig.googleapis.com/v1/projects/${{ inputs.firebase_target_project }}/remoteConfig"
