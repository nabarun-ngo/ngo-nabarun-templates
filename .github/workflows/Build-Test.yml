name: Build and Test
on:
  workflow_call:
    inputs:
      platform:
        description: "Platform type (node, java, etc.)"
        required: true
        type: string
      repo:
        description: "Repository to clone"
        required: false
        type: string
      branch:
        description: "Branch to checkout (e.g., main, stage)"
        required: false
        type: string
      command:
        description: "Build command to run (e.g., 'npm run build', 'clean test', 'clean package')"
        required: true
        type: string
      node_version:
        description: "Node.js version (for Node apps)"
        required: false
        type: string
        default: "20"
      java_version:
        description: "Java version (for Java apps)"
        required: false
        type: string
        default: "17"
      working_directory:
        description: "Directory where the code resides"
        required: false
        type: string
        default: "."
      maven_options:
        description: "Additional Maven options (for Java apps)"
        required: false
        type: string
        default: "-Dmaven.test.skip=false"


jobs:

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.branch }}
          path: ${{ inputs.working_directory }}

      - name: Node.js Build and Test
        if: inputs.platform == 'node'
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/build-node@main
        with:
          node_version: ${{ inputs.node_version }}
          working_directory: ${{ inputs.working_directory }}
          command: ${{ inputs.command }}

      - name: Java Build and Test
        if: inputs.platform == 'java'
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/build-java@main
        with:
          java_version: ${{ inputs.java_version }}
          working_directory: ${{ inputs.working_directory }}
          maven_command: ${{ inputs.command }}
          maven_options: ${{ inputs.maven_options }}
          token: ${{ secrets.GITHUB_TOKEN }}
          enable_cache: 'true'
          upload_test_results: 'true'
