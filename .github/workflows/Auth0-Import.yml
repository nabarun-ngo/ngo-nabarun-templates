name: Auth0 Import Data
on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string
      source: # Options 'google_drive', 'repository'
        required: true
        type: string
      auth0_import_tenant:
        required: true
        type: string
      input_file:
        required: true
        type: string
      import_data:
        required: true
        type: boolean
      import_user:
        required: true
        type: boolean
      delete_old_user:
        required: false
        type: boolean
        default: false
      doppler_project:
        required: true
        type: string
      java_version:
        required: false
        type: string
        default: '17'
      target_folder:
        required: false
        type: string
        default: 'target'
      dry_run:
        required: false
        type: boolean
        default: false
      app_base_url:
        required: true
        type: string
    secrets:
      doppler_service_token:
        required: true
      gcp_service_account:
        required: false
      app_token:
        required: false

jobs:
  import_data:
    name: 'Import Data to Auth0'
    runs-on: ubuntu-latest
    steps:     
      - name: Checkout repository | Branch ${{ inputs.branch_name }}
        uses: actions/checkout@v4
        with:
          repository: nabarun-ngo/ngo-nabarun-tools
          ref: ${{ inputs.branch_name }}

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ inputs.java_version }} 
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-   
        
      - name: Build with Maven
        run: |
          mvn clean package
          
      - name: Get JAR file path
        id: get-jar-path
        run: |
          JAR_PATH=$(find ${{ inputs.target_folder }} -name "*.jar" | grep -v "sources.jar" | grep -v "javadoc.jar")
          echo "jar_path=${JAR_PATH}" >> $GITHUB_ENV
          echo "JAR file path: ${JAR_PATH}"
          
      - name: Download file ${{ inputs.input_file }} from Google Drive
        uses: k0staa/download-gdrive-file-action@v1
        if: ${{ inputs.source == 'google_drive' }}
        with:
          service-account-key-json: ${{ secrets.gcp_service_account }}
          download-file-name: ${{ inputs.input_file }}

      - name: Import Data to Auth0 from ${{ inputs.source }}
        if: ${{ inputs.dry_run == false && inputs.import_data }}
        run: |
          java -jar ${{ env.jar_path }} auth0-import-data -d ${{ inputs.auth0_import_tenant }} -i ${{ inputs.input_file }} -p ${{ inputs.doppler_project }} --destToken '${{ secrets.doppler_service_token }}'
      
      - name: Import User to Auth0 from ${{ inputs.source }}
        if: ${{ inputs.dry_run == false && inputs.import_user }}
        run: |
          java -jar ${{ env.jar_path }} auth0-import-users -d ${{ inputs.auth0_import_tenant }} -i ${{ inputs.input_file }} -r ${{ inputs.delete_old_user }} -p ${{ inputs.doppler_project }} --destToken '${{ secrets.doppler_service_token }}'
    
      - name: Sync User between Auth0 and Application DB
        if: ${{ inputs.dry_run == false && inputs.import_user }}
        id: sync_users
        uses: fjogeleit/http-request-action@v1
        with:
          url: '${{ inputs.app_base_url }}/api/admin/jobs/trigger'
          method: POST
          customHeaders: '{"Content-Type": "application/json","X-Api-Key":"${{ secrets.app_token }}"}'
          data: |
           [{
              "name": "SYNC_USERS",
              "parameters": {
                "sync_role": "Y"
              }
            }]
      
      - name: Variable List
        run: |
          echo "Inputs: "
          echo "Dry run mode : ${{ inputs.dry_run }}"
          echo "Source: ${{ inputs.source }}"
          echo "Auth0 Import Tenant: ${{ inputs.auth0_import_tenant }}"
          echo "Input File: ${{ inputs.input_file }}"
          echo "Auth0 Resource Server: ${{ inputs.auth0_resource_server }}"
          echo "Is Import data: ${{ inputs.import_data }}"
          echo "Is Import User: ${{ inputs.import_user }}"
          echo "Delete Old User: ${{ inputs.delete_old_user }}"
          echo "Outputs: "
          echo "Sync Trigger Response : ${{ steps.sync_users.outputs.response }}"

      - name: Dry run Verify Files
        if: ${{ inputs.dry_run == true }}
        run: |
          echo "Files in the current directory and subdirectories:"
          find . -type f
