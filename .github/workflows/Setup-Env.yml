name: 'Setup'
on:
  workflow_call:
    inputs:
      inputs:
        description: "All workflow_dispatch inputs as JSON string"
        type: string
        required: false
      client_payload:
        description: "repository_dispatch client payload as JSON string"
        type: string
        required: false
      script_path:
        description: "Path to shell script to execute (optional)"
        type: string
        required: false
      script_args:
        description: "Arguments to pass to the shell script (optional)"
        type: string
        required: false
      resolve_variables:
        description: "Comma-separated list of environment variable names to resolve from $GITHUB_ENV into final JSON"
        type: string
        required: false
    outputs:
      variables:
        description: "Merged input variables as JSON"
        value: ${{ jobs.set_env.outputs.variables }}

jobs:
  set_env:
    name : 'Set Variables'
    runs-on: ubuntu-latest
    outputs:
      variables: ${{ steps.update_json.outputs.updated_json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Schedule Configuration
        id: determine_config
        if: ${{ github.event_name == 'schedule' }}
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/determine-schedule-config@main

      - name: Resolve and Expose Inputs to $GITHUB_ENV
        id: resolve_input
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/resolve-inputs@main
        with:
          inputs: ${{ inputs.inputs }}
          client_payload: ${{ inputs.client_payload }}
          schedule_config_file: ${{ steps.determine_config.outputs.config_file }}

      - name: Print all environment variables
        shell: bash
        run: |
          echo "===== All Env Vars (Before Script) ====="
          env
          echo "========================================"
          
      # This script can set variables or output JSON that will be merged with configuration
      - name: Execute Shell Script
        if: ${{ inputs.script_path != '' }}
        id: execute_script
        shell: bash
        run: |
          set -euo pipefail
          
          script_path="${{ inputs.script_path }}"
          script_args="${{ inputs.script_args }}"
          
          echo "üöÄ Executing script: $script_path"
          if [[ -n "$script_args" ]]; then
            echo "üìù Script arguments: $script_args"
          fi
          
          chmod +x "$script_path"
          
          # Execute the script with arguments (if provided)
          if [[ -n "$script_args" ]]; then
            eval "\"$script_path\" $script_args" || {
              echo "‚ùå Script execution failed with exit code $?"
              exit 1
            }
          else
            "$script_path" || {
              echo "‚ùå Script execution failed with exit code $?"
              exit 1
            }
          fi
          
          echo "‚úÖ Script execution completed successfully"
          echo "‚úÖ Script has set output variables to $GITHUB_ENV (if any)"

      - name: Print all environment variables
        shell: bash
        run: |
          echo "===== All Env Vars (After Script) ====="
          env
          echo "========================================"

      - name: Resolve Final Inputs
        id: update_json
        uses: nabarun-ngo/ngo-nabarun-templates/.github/actions/update-json-from-env@main
        with:
          base_json: ${{ steps.resolve_input.outputs.variables }}
          resolve_variables: ${{ inputs.resolve_variables }}

     