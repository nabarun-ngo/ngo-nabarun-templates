name: GCP Health Check Deployment
description: Performs health checks on deployed applications with retry logic

inputs:
  environment_url:
    description: 'URL to perform health check against'
    required: false
  max_attempts:
    description: 'Maximum number of health check attempts'
    required: false
    default: '10'
  retry_delay:
    description: 'Delay between retry attempts in seconds'
    required: false
    default: '15'
  timeout:
    description: 'Timeout for each health check request in seconds'
    required: false
    default: '30'

outputs:
  health_check_passed:
    description: 'Whether health check passed (true/false)'
    value: ${{ steps.health_check.outputs.health_check_passed }}
  attempts_made:
    description: 'Number of attempts made before success or failure'
    value: ${{ steps.health_check.outputs.attempts_made }}

runs:
  using: composite
  steps:
    - id: health_check
      name: Perform deployment health check
      shell: bash
      run: |
        echo "🏥 Performing deployment health check..."
        
        ENVIRONMENT_URL="${{ inputs.environment_url }}"
        MAX_ATTEMPTS=${{ inputs.max_attempts }}
        RETRY_DELAY=${{ inputs.retry_delay }}
        TIMEOUT=${{ inputs.timeout }}
        
        if [[ -z "$ENVIRONMENT_URL" || "$ENVIRONMENT_URL" == "" ]]; then
          echo "ℹ️ No environment URL provided, skipping HTTP health check"
          echo "health_check_passed=true" >> "$GITHUB_OUTPUT"
          echo "attempts_made=0" >> "$GITHUB_OUTPUT"
          exit 0
        fi
        
        echo "🔍 Health check configuration:"
        echo "  URL: $ENVIRONMENT_URL"
        echo "  Max attempts: $MAX_ATTEMPTS"
        echo "  Retry delay: ${RETRY_DELAY}s"
        echo "  Request timeout: ${TIMEOUT}s"
        
        ATTEMPT=1
        SUCCESS=false
        
        while [[ $ATTEMPT -le $MAX_ATTEMPTS ]]; do
          echo "🔍 Health check attempt $ATTEMPT/$MAX_ATTEMPTS"
          
          # Try health endpoint first, then fallback to root
          if curl -f -s --max-time "$TIMEOUT" "$ENVIRONMENT_URL/health" >/dev/null 2>&1; then
            echo "✅ Health check passed on attempt $ATTEMPT (health endpoint)"
            SUCCESS=true
            break
          elif curl -f -s --max-time "$TIMEOUT" "$ENVIRONMENT_URL" >/dev/null 2>&1; then
            echo "✅ Health check passed on attempt $ATTEMPT (root endpoint)"
            SUCCESS=true
            break
          fi
          
          if [[ $ATTEMPT -lt $MAX_ATTEMPTS ]]; then
            echo "⏳ Health check failed, waiting ${RETRY_DELAY} seconds..."
            sleep "$RETRY_DELAY"
          fi
          
          ATTEMPT=$((ATTEMPT + 1))
        done
        
        echo "attempts_made=$ATTEMPT" >> "$GITHUB_OUTPUT"
        
        if [[ "$SUCCESS" == "true" ]]; then
          echo "✅ Health check completed successfully"
          echo "health_check_passed=true" >> "$GITHUB_OUTPUT"
        else
          echo "⚠️ Health check failed after $MAX_ATTEMPTS attempts"
          echo "🔍 This doesn't necessarily mean deployment failed - the app might still be starting"
          echo "health_check_passed=false" >> "$GITHUB_OUTPUT"
        fi
